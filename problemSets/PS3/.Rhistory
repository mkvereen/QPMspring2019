install.packages("faraway")
library("faraway")
data("newhamp")
help("newhamp")
"faraway"
setwd("~/Documents/GitHub/QPMspring2019/problemSets/PS3")
install.packages("faraway")
install.packages("faraway")
x
install.packages("faraway")
setwd("~/Documents/GitHub/QPMspring2019/problemSets/PS3")
install.packages("faraway")
library("faraway")
data("newhamp")
help("newhamp")
setwd("~/Documents/GitHub/QPMspring2019/problemSets/PS3")
install.packages("Zelig")
(yes)
library("Zelig")
data("voteincome")
?voteincome
install.packages("Zelig")
install.packages("Zelig")
data("voteincome")
install.packages("Zelig")
data("voteincome")
?voteincome
install.packages("Zelig")
library("Zelig")
data("voteincome")
# Let's make a fake contingency table for gender and party ID
#c is creating it in a long vector form and then telling r to split that up
#use order of going from l to r and then down a row
#nrow means # of rows
#by row means counting numbers sequentially by row - putting them from l to r
#u always put list rows, columns and u have to assign list to an object - this
#is just how u order it
#assign names to dimensions
#put it into a table so u can use chi sq function w it (as.table) - makes easier 4 R
fake.tab <- matrix(c(762, 327, 468, 484, 239, 677), nrow=2, byrow=TRUE)
dimnames(fake.tab) <- list(Gender=c("Female", "Male"),
Party=c("Democrat", "Independent", "Republican"))
fake.tab <- as.table(fake.tab)
fake.tab
# Chi-squared test
chisq.test(fake.tab)
# Read and inspect the data
cancer <- read.csv(url("http://whitlockschluter.zoology.ubc.ca/wp-content/data/chapter09/chap09e2AspirinCancer.csv"))
head(cancer)
# create table between cancer and treatment
cancerTable <- table(cancer$cancer, cancer$aspirinTreatment)
# here is the data
abort.tab <- matrix(c(222, 225, 201, 277, 113, 223, 18, 12), nrow=4, byrow=TRUE)
dimnames(abort.tab) <- list(Party=c("Democrat", "Independent", "Republican", "Other"),
Opinion=c("Yes", "No"))
abort.tab
as.table<= table(abort.tab)
as.table<=abort.tab
newtabl<-as.table(abort.tab)
newtabl
# here is the data
abort.tab <- matrix(c(222, 225, 201, 277, 113, 223, 18, 12), nrow=4, byrow=TRUE)
dimnames(abort.tab) <- list(Party=c("Democrat", "Independent", "Republican", "Other"),
Opinion=c("Yes", "No"))
chisq.test(newtabl)
convict.tab <- matrix(c(3150, 230, 516, 2984), nrow=2, byrow=TRUE)
dimnames(convict.tab) <- list(Offender=c("White", "Black"),
Defendant=c("White", "Black"))
convict.tab<-table1
odds.ratio(table1)
oddsratio(table1)
oddratio(table1)
oddsratio
oddsratio(convict.tab)
# if you don't have this library, install it
if (!require("epitools")) {install.packages("epitools", dependencies = TRUE, repos="http://cran.rstudio.com/")}
library(epitools)
oddsratio(convict.tab)
dimnames(convict.tab) <- list(Offender=c("WhiteOf", "BlackOf"),
Defendant=c("WhiteDef", "BlackDef"))
oddsratio(convict.tab)
dimnames(convict.tab) <- list(Offender=c("WhiteOf", "BlackOf"),
Victim=c("WhiteV", "BlackV"))
oddsratio(convict.tab)
?oddsratio
setwd("~/Documents/GitHub/QPMspring2019/problemSets/PS3")
install.packages("Zelig")
install.packages("Zelig")
data("voteincome")
install.packages("Zelig")
library("Zelig")
data("voteincome")
data("voteincome")
?voteincome
voteincome$voted
install.packages("faraway")
library("faraway")
data("newhamp")
help("newhamp")
plot("Dean", "pObama")
plot(newhamp$Dean, newhamp$pObama)
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=5, cex=1, col=4)
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=5, cex=2, col=4)
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=3, cex=1, col=4)
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=2, cex=1, col=4)
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=1, cex=1, col=4)
dev.off("Problem1.1")
dev.off()
plot(votesys$H, votesys$D)
data("newhamp")
plot(votesys$H, votesys$D)
install.packages("faraway")
library("faraway")
data("newhamp")
plot(newhamp$votesys==H, newhamp$votesys==D)
plot(newhamp$votesys, newhamp$votesys)
plot(newhamp$votesys$D, newhamp$votesys)
#question 2
#B
x=seq(-4,4,length=200)
#question 2
#B
x=seq(-4,4,length=200)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="red")
dev.off()
x<-seq(from=-5, to=5, by=.1)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1)
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=2, lty=2)
lines(x, dt(x, df=3), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=1), lwd=3, ylim=c(0, .4), col=4, lty=4)
x<-seq(from=-5, to=5, length=200)
by=.1
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=4, lty=4)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1)
lines(x, dt(x, df=3), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=4, lty=4)
#B1
x=seq(-4,4,length=200)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="red")
lines(x, dt(x, df=3), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=4, lty=4)
legend("topleft",
c("n(0,1)", "t(df=10)", "t(df=5)", "t(df=1)"),
lty=c(1,2,3,4), col=c(1,2,3,4), bty="n")
legend("topleft",
c("n(-4,4", "t(df=20)", "t(df=3)", "t(df=1)"),
lty=c(1,2,3,4), col=c(1,2,3,4), bty="n")
legend("topleft",
c("normal", "t(df=20)", "t(df=3)", "t(df=1)"),
lty=c(1,2,3,4), col=c(1,2,3,4), bty="n")
dev.off()
x=seq(-4,4,length=200)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="red")
lines(x, dt(x, df=3), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=4, lty=4)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1)
x=seq(-4,4,length=200)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="red")
lines(x, dt(x, df=3), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=4, lty=4)
legend("topleft",
c("normal", "t(df=20)", "t(df=3)", "t(df=1)"),
lty=c(1,2,3,4), col=c(1,2,3,4), bty="n")
plot(x,y,type="l",lwd=2,col="red")
legend("topleft",
c("normal", "t(df=20)", "t(df=3)", "t(df=1)"),
lty=c(1,2,3,4), col=c(1,2,3,4), bty="n")
x<-seq(from=-5, to=5, by=.1)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1)
lines(x, dt(x, df=10), lwd=3, ylim=c(0, .4), col=2, lty=2)
lines(x, dt(x, df=5), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=30), lwd=3, ylim=c(0, .4), col=2, lty=2)
x<-seq(from=-5, to=5, by=.1)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1)
lines(x, dt(x, df=30), lwd=3, ylim=c(0, .4), col=2, lty=2)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1)
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=2, lty=2)
lines(x, dt(x, df=3), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=1), lwd=3, ylim=c(0, .4), col=4, lty=4)
legend("topleft",
c("normal", "t(df=20)", "t(df=3)", "t(df=1)"),
lty=c(1,2,3,4), col=c(1,2,3,4), bty="n")
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1, xlab="x", ylab="y", main="Question 2")
x<-seq(from=-5, to=5, by=.1)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1, xlab="x", ylab="y", main="Question 2")
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=2, lty=2)
lines(x, dt(x, df=3), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=1), lwd=3, ylim=c(0, .4), col=4, lty=4)
legend("topleft",
c("normal", "t(df=20)", "t(df=3)", "t(df=1)"),
lty=c(1,2,3,4), col=c(1,2,3,4), bty="n")
pdf("Question 2")
print("Question 2")
pdf()
dev.off()
dev.off()
install.packages("Zelig")
install.packages("Zelig")
library("Zelig")
data("voteincome")
?voteincome
x<-voteincome$age
mean(x)
sd(x)
sqrt(1500)
sd(x)/sqrt(1500)
50-mean(x)
(50-mean(x))/sd(x)
#z score=(x-u)/sd
qnorm(x)
#z score=(x-u)/sd
z.score = qnorm(1-.95/2)
z.score
(50-mean(x))/sd(x)
mean(x) - z.score*.4511027
mean.variable+ z.score*.4511027
mean(x)+ z.score*.4511027
mean(x)
mean(x)+
z.score*.4511027
z.score*.4511027
#question 1
#A
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=1, cex=1, col=4)
#question 1
#A
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=1, cex=1, col=4)
install.packages("faraway")
install.packages("faraway")
library("faraway")
data("newhamp")
install.packages("faraway")
help("newhamp")
#question 1
#A
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=1, cex=1, col=4)
dev.off()
#B
plot(newhamp$votesys, newhamp$votesys)
x<-seq(from=-5, to=5, by=.1)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1, xlab="x", ylab="y", main="Question 2")
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=2, lty=2)
install.packages("faraway")
#question 1
#A
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=1, cex=1, col=4)
x<-seq(from=-5, to=5, by=.1)
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=2, lty=2)
plot(x, dnorm(x), lwd=3, type="l", col=1, lty=1, xlab="x", ylab="y", main="Question 2")
lines(x, dt(x, df=20), lwd=3, ylim=c(0, .4), col=2, lty=2)
lines(x, dt(x, df=3), lwd=3, ylim=c(0, .4), col=3, lty=3)
lines(x, dt(x, df=1), lwd=3, ylim=c(0, .4), col=4, lty=4)
legend("topleft",
c("normal", "t(df=20)", "t(df=3)", "t(df=1)"),
lty=c(1,2,3,4), col=c(1,2,3,4), bty="n")
#z score=(x-u)/sd
(50-mean(x))/.4511027
#se=sd/sqrt(n)
x<-voteincome$age
sd(x)/sqrt(1500)
#z score=(x-u)/sd
(50-mean(x))/.4511027
#D
mean(x)
#z score=(x-u)/se
(50-mean(x))/.4511027
#z score=(x-u)/se
z.score<-(50-mean(x))/.4511027
z.score =
pnorm(1-.95/2)
z.score
z.score = qnorm(1-.95/2)
z.score
mean(x) - 1.637469*.4511027
mean(x)+ 1.637469*.4511027
mean(x) - 1.96*.4511027
mean(x)+ 1.96*.4511027
#D
mean(x)
#question 1
#A
plot(newhamp$Dean, newhamp$pObama, xlab="Dean Voters", ylab="Obama Voters", main="Problem 1.1",
pch=1, cex=1, col=4)
#question 1
#A
plot(newhamp$pObama, newhamp$Dean, main= "Proportion of New Hampshire voter preference between Dean and Obama and hand counted vs machine ballots", cex.main=.5, xlab="proportion Obama", ylab="proportion Dean", col=my_cols, xlim=c(0,1), ylim=c(0,1))
my_cols <- ifelse(newhamp$votesys=="H", "Blue", "Red")
legend("topleft", legend = c("Hand counted", "Machine counted"), col = c("Blue", "Red"), lty = 1, cex = 1)
#question 1
#A
plot(newhamp$pObama, newhamp$Dean, main= "Proportion of New Hampshire voter preference between Dean and Obama and hand counted vs machine ballots", cex.main=.5, xlab="proportion Obama", ylab="proportion Dean", col=my_cols, xlim=c(0,1), ylim=c(0,1))
#question 1
#A
plot(newhamp$pObama, newhamp$Dean, main= "Dean vs Obama and hand counted vs machine ballots", cex.main=.5, xlab="proportion Obama", ylab="proportion Dean", col=my_cols, xlim=c(0,1), ylim=c(0,1))
my_cols <- ifelse(newhamp$votesys=="H", "Blue", "Red")
legend("topleft", legend = c("Hand counted", "Machine counted"), col = c("Blue", "Red"), lty = 1, cex = 1)
#question 1
#A
plot(newhamp$pObama, newhamp$Dean, main= "Dean vs Obama and hand counted vs machine ballots", cex.main=1, xlab="proportion Obama", ylab="proportion Dean", col=my_cols, xlim=c(0,1), ylim=c(0,1))
